/**
 * AutoDist synchronization messages.
 */
syntax = "proto3";

package autodist.proto;

/**
 * Synchronization using a Parameter Server.
 */
message PSSynchronizer {
    repeated string reduction_destinations = 1;  // Parameter Servers to use
    bool local_replication = 2;  // Whether to create local proxies of each PS variable
    bool sync = 3;  // Whether to sync gradients across between-graph replications
}

/**
 * Synchronization using AllReduce.
 */
message AllReduceSynchronizer {
    /** Which communication method to use */
    enum Spec {
        AUTO = 0;
        NCCL = 1;
        RING = 2;
    }

    Spec spec = 1;

    /** Which gradient compression method to use */
    enum Compressor {
        NoneCompressor = 0;
        HorovodCompressor = 1;
        HorovodCompressorEF = 2;
        PowerSGDCompressor = 3;
    }

    Compressor compressor = 2;
    int32 chunk_size = 3;  // Size threshold for batching all-reduce communications
}
